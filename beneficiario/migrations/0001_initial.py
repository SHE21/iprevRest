# Generated by Django 3.2.9 on 2021-12-14 21:53

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('genero', models.CharField(max_length=10, verbose_name='Genero')),
                ('cpf', models.CharField(max_length=50, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(max_length=50, verbose_name='RG')),
                ('cnh', models.CharField(max_length=50, verbose_name='CNH')),
                ('pis_pasep', models.CharField(max_length=100, verbose_name='PIS/PASEP')),
                ('dataNascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('eleitorNumero', models.CharField(max_length=50, verbose_name='Número de eleitor')),
                ('nomeMae', models.CharField(max_length=100, verbose_name='Nome da Mãe')),
                ('nomePai', models.CharField(max_length=100, verbose_name='Nome do Pai')),
                ('naturalidade', models.CharField(max_length=100, verbose_name='Naturalidade')),
                ('cargo', models.CharField(max_length=100, verbose_name='Cargo')),
                ('foto', models.ImageField(upload_to='user_foto')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Membro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Beneficiário',
                'verbose_name_plural': 'Beneficiários',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgao', models.CharField(max_length=50, verbose_name='Orgão')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome do Cargo/Profissão')),
                ('matricula', models.CharField(max_length=80, verbose_name='Matrícula')),
                ('lotacao', models.CharField(max_length=100, verbose_name='Lotação/Setor')),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filePath', models.CharField(max_length=100, verbose_name='Path')),
                ('fileNome', models.CharField(max_length=100, verbose_name='Nome Documento')),
                ('categoria', models.CharField(max_length=80, verbose_name='Categoria/Tipo')),
                ('formato', models.CharField(max_length=10, verbose_name='Formato')),
                ('beneficiario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documento', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoSolicitacao', models.CharField(max_length=120, verbose_name='Tipo de Solicitação')),
                ('data', models.DateTimeField()),
                ('status', models.BooleanField(default=True)),
                ('deferida', models.BooleanField(default=False)),
                ('beneficiario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao', to=settings.AUTH_USER_MODEL)),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beneficiario.documento')),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('rua', models.CharField(max_length=100, verbose_name='Rua/Avenida')),
                ('bairro', models.CharField(max_length=80, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=15, verbose_name='CEP')),
                ('beneficiario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='endereco', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Endereço',
            },
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(max_length=50, verbose_name='Telefone')),
                ('celular', models.CharField(max_length=50, verbose_name='Celular')),
                ('beneficiario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contato', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contato',
                'verbose_name_plural': 'Contatos',
            },
        ),
    ]
